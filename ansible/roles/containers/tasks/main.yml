---
- name: check if container exists
  command: incus list {{ container_name }} --format csv
  register: container_check
  failed_when: false
  changed_when: false

- name: create container
  command: >
    incus launch images:{{ container_image | default('ubuntu/22.04/arm64') }}
    {{ container_name }}
    {% for key, value in container_config.items() %}
    --config {{ key }}={{ value }}
    {% endfor %}
  when: container_name not in container_check.stdout
  register: container_created

- name: wait for container to start
  command: incus exec {{ container_name }} -- systemctl is-system-running --wait
  when: container_created is changed
  retries: 30
  delay: 2

- name: add mounts to container
  command: >
    incus config device add {{ container_name }} {{ item.key }}
    disk source={{ item.value.source }} path={{ item.value.path }}
  loop: "{{ container_devices | dict2items }}"
  when:
    - container_devices is defined
    - item.value.type == 'disk'
  failed_when: false

- name: add container to inventory
  ansible.builtin.add_host:
    name: "{{ container_name }}"
    ansible_connection: lxd
    groups: "{{ container_groups | default([]) }}"
